// Code generated by protoc-gen-go. DO NOT EDIT.
// source: truck.proto

package proto

import (
	_ "fleet-backend/common/proto"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Truck struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LicensePlate         string   `protobuf:"bytes,2,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	ClockedInUser        string   `protobuf:"bytes,3,opt,name=clockedInUser,proto3" json:"clockedInUser,omitempty"`
	Miles                float32  `protobuf:"fixed32,4,opt,name=miles,proto3" json:"miles,omitempty"`
	FleetCompanyId       string   `protobuf:"bytes,5,opt,name=fleetCompanyId,proto3" json:"fleetCompanyId,omitempty"`
	CorporationId        string   `protobuf:"bytes,6,opt,name=corporationId,proto3" json:"corporationId,omitempty"`
	RegionId             string   `protobuf:"bytes,7,opt,name=regionId,proto3" json:"regionId,omitempty"`
	LocationId           string   `protobuf:"bytes,8,opt,name=locationId,proto3" json:"locationId,omitempty"`
	DistrictId           string   `protobuf:"bytes,9,opt,name=districtId,proto3" json:"districtId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Truck) Reset()         { *m = Truck{} }
func (m *Truck) String() string { return proto.CompactTextString(m) }
func (*Truck) ProtoMessage()    {}
func (*Truck) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cba16cf62773f0b, []int{0}
}

func (m *Truck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Truck.Unmarshal(m, b)
}
func (m *Truck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Truck.Marshal(b, m, deterministic)
}
func (m *Truck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Truck.Merge(m, src)
}
func (m *Truck) XXX_Size() int {
	return xxx_messageInfo_Truck.Size(m)
}
func (m *Truck) XXX_DiscardUnknown() {
	xxx_messageInfo_Truck.DiscardUnknown(m)
}

var xxx_messageInfo_Truck proto.InternalMessageInfo

func (m *Truck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Truck) GetLicensePlate() string {
	if m != nil {
		return m.LicensePlate
	}
	return ""
}

func (m *Truck) GetClockedInUser() string {
	if m != nil {
		return m.ClockedInUser
	}
	return ""
}

func (m *Truck) GetMiles() float32 {
	if m != nil {
		return m.Miles
	}
	return 0
}

func (m *Truck) GetFleetCompanyId() string {
	if m != nil {
		return m.FleetCompanyId
	}
	return ""
}

func (m *Truck) GetCorporationId() string {
	if m != nil {
		return m.CorporationId
	}
	return ""
}

func (m *Truck) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *Truck) GetLocationId() string {
	if m != nil {
		return m.LocationId
	}
	return ""
}

func (m *Truck) GetDistrictId() string {
	if m != nil {
		return m.DistrictId
	}
	return ""
}

type TruckResponse struct {
	Truck                *Truck   `protobuf:"bytes,1,opt,name=truck,proto3" json:"truck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TruckResponse) Reset()         { *m = TruckResponse{} }
func (m *TruckResponse) String() string { return proto.CompactTextString(m) }
func (*TruckResponse) ProtoMessage()    {}
func (*TruckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cba16cf62773f0b, []int{1}
}

func (m *TruckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TruckResponse.Unmarshal(m, b)
}
func (m *TruckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TruckResponse.Marshal(b, m, deterministic)
}
func (m *TruckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TruckResponse.Merge(m, src)
}
func (m *TruckResponse) XXX_Size() int {
	return xxx_messageInfo_TruckResponse.Size(m)
}
func (m *TruckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TruckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TruckResponse proto.InternalMessageInfo

func (m *TruckResponse) GetTruck() *Truck {
	if m != nil {
		return m.Truck
	}
	return nil
}

type TrucksResponse struct {
	Trucks               []*Truck `protobuf:"bytes,2,rep,name=trucks,proto3" json:"trucks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrucksResponse) Reset()         { *m = TrucksResponse{} }
func (m *TrucksResponse) String() string { return proto.CompactTextString(m) }
func (*TrucksResponse) ProtoMessage()    {}
func (*TrucksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cba16cf62773f0b, []int{2}
}

func (m *TrucksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrucksResponse.Unmarshal(m, b)
}
func (m *TrucksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrucksResponse.Marshal(b, m, deterministic)
}
func (m *TrucksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrucksResponse.Merge(m, src)
}
func (m *TrucksResponse) XXX_Size() int {
	return xxx_messageInfo_TrucksResponse.Size(m)
}
func (m *TrucksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrucksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrucksResponse proto.InternalMessageInfo

func (m *TrucksResponse) GetTrucks() []*Truck {
	if m != nil {
		return m.Trucks
	}
	return nil
}

type ClockOperation struct {
	DriverId             string   `protobuf:"bytes,1,opt,name=driverId,proto3" json:"driverId,omitempty"`
	TruckId              string   `protobuf:"bytes,2,opt,name=truckId,proto3" json:"truckId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClockOperation) Reset()         { *m = ClockOperation{} }
func (m *ClockOperation) String() string { return proto.CompactTextString(m) }
func (*ClockOperation) ProtoMessage()    {}
func (*ClockOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cba16cf62773f0b, []int{3}
}

func (m *ClockOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockOperation.Unmarshal(m, b)
}
func (m *ClockOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockOperation.Marshal(b, m, deterministic)
}
func (m *ClockOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockOperation.Merge(m, src)
}
func (m *ClockOperation) XXX_Size() int {
	return xxx_messageInfo_ClockOperation.Size(m)
}
func (m *ClockOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ClockOperation proto.InternalMessageInfo

func (m *ClockOperation) GetDriverId() string {
	if m != nil {
		return m.DriverId
	}
	return ""
}

func (m *ClockOperation) GetTruckId() string {
	if m != nil {
		return m.TruckId
	}
	return ""
}

func init() {
	proto.RegisterType((*Truck)(nil), "proto.Truck")
	proto.RegisterType((*TruckResponse)(nil), "proto.TruckResponse")
	proto.RegisterType((*TrucksResponse)(nil), "proto.TrucksResponse")
	proto.RegisterType((*ClockOperation)(nil), "proto.ClockOperation")
}

func init() { proto.RegisterFile("truck.proto", fileDescriptor_3cba16cf62773f0b) }

var fileDescriptor_3cba16cf62773f0b = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x26, 0x5b, 0x36, 0x49, 0x27, 0xdb, 0x08, 0x59, 0x45, 0xb2, 0x22, 0x84, 0xc2, 0x52, 0xa1,
	0x5e, 0xda, 0x4a, 0x8d, 0x84, 0xe0, 0x48, 0x22, 0xb5, 0xf2, 0x09, 0x14, 0xe8, 0x85, 0xdb, 0xd6,
	0x1e, 0x90, 0x15, 0xc7, 0x5e, 0x6c, 0xa7, 0x52, 0x1f, 0x87, 0x57, 0xe4, 0x09, 0xd0, 0x8e, 0x37,
	0x21, 0x4b, 0xd5, 0x43, 0x4f, 0xbb, 0xf3, 0xfd, 0x78, 0xc6, 0xdf, 0x18, 0x46, 0xd1, 0x6f, 0xe4,
	0xea, 0xbc, 0xf6, 0x2e, 0x3a, 0x96, 0xd3, 0x67, 0x52, 0x48, 0xb7, 0x5e, 0x3b, 0x9b, 0xc0, 0xf2,
	0x77, 0x06, 0xf9, 0xb7, 0x46, 0xc4, 0xc6, 0x90, 0x69, 0xc5, 0x7b, 0xd3, 0xde, 0xe9, 0xe1, 0x32,
	0xd3, 0x8a, 0x95, 0x50, 0x18, 0x2d, 0xd1, 0x06, 0xfc, 0x62, 0xaa, 0x88, 0x3c, 0x23, 0xa6, 0x83,
	0xb1, 0x13, 0x38, 0x92, 0xc6, 0xc9, 0x15, 0x2a, 0x61, 0x6f, 0x02, 0x7a, 0x7e, 0x40, 0xa2, 0x2e,
	0xc8, 0x8e, 0x21, 0x5f, 0x6b, 0x83, 0x81, 0x3f, 0x9f, 0xf6, 0x4e, 0xb3, 0x65, 0x2a, 0xd8, 0x3b,
	0x18, 0xff, 0x30, 0x88, 0x71, 0xe1, 0xd6, 0x75, 0x65, 0xef, 0x85, 0xe2, 0x39, 0x99, 0xff, 0x43,
	0xa9, 0x87, 0xf3, 0xb5, 0xf3, 0x55, 0xd4, 0xce, 0x0a, 0xc5, 0xfb, 0x6d, 0x8f, 0x7d, 0x90, 0x4d,
	0x60, 0xe8, 0xf1, 0x67, 0x12, 0x0c, 0x48, 0xb0, 0xab, 0xd9, 0x6b, 0x00, 0xe3, 0xe4, 0xd6, 0x3e,
	0x24, 0x76, 0x0f, 0x69, 0x78, 0xa5, 0x43, 0xf4, 0x5a, 0x46, 0xa1, 0xf8, 0x61, 0xe2, 0xff, 0x21,
	0xe5, 0x0c, 0x8e, 0x28, 0xa2, 0x25, 0x86, 0xda, 0xd9, 0x80, 0xac, 0x84, 0x9c, 0x82, 0xa5, 0xb4,
	0x46, 0x97, 0x45, 0xca, 0xf2, 0x3c, 0x89, 0x12, 0x55, 0xbe, 0x87, 0x31, 0xd5, 0x61, 0xe7, 0x3a,
	0x81, 0x3e, 0x51, 0x81, 0x67, 0xd3, 0x83, 0x07, 0xb6, 0x96, 0x2b, 0xaf, 0x60, 0xbc, 0x68, 0xd2,
	0xfb, 0x5c, 0x63, 0xba, 0x5c, 0x73, 0x35, 0xe5, 0xf5, 0x1d, 0x7a, 0xb1, 0x5d, 0xcf, 0xae, 0x66,
	0x1c, 0x06, 0xe4, 0x13, 0xaa, 0xdd, 0xcf, 0xb6, 0xbc, 0xfc, 0x93, 0x41, 0x41, 0xff, 0x5f, 0xd1,
	0xdf, 0x69, 0x89, 0x6c, 0x06, 0xa3, 0x85, 0xc7, 0x2a, 0x62, 0x5a, 0x77, 0xa7, 0xfb, 0xe4, 0xb8,
	0x33, 0x4b, 0x3b, 0x71, 0xf9, 0xac, 0x31, 0xdd, 0xd4, 0xea, 0x89, 0xa6, 0x0f, 0x50, 0x5c, 0x63,
	0x24, 0x74, 0xde, 0x6c, 0xf0, 0x45, 0xab, 0x13, 0x6a, 0x89, 0xbf, 0x36, 0x18, 0xe2, 0xa3, 0x4e,
	0x01, 0xaf, 0xae, 0x31, 0x7e, 0x32, 0x26, 0x45, 0x37, 0xbf, 0xbf, 0xea, 0xbe, 0x85, 0x87, 0x27,
	0xbd, 0xdc, 0x3f, 0x29, 0x74, 0x86, 0x18, 0x50, 0x8e, 0xc2, 0xb2, 0xad, 0xa6, 0x9b, 0xeb, 0xa3,
	0x43, 0x7c, 0x84, 0x61, 0x52, 0x6e, 0xe2, 0x13, 0xad, 0xf3, 0xb7, 0xdf, 0xdf, 0xd0, 0xeb, 0x3d,
	0xbb, 0xad, 0xe4, 0x0a, 0xad, 0xba, 0xa0, 0x0d, 0x9c, 0x85, 0xb4, 0x82, 0x0b, 0x32, 0xdd, 0xf6,
	0xe9, 0x33, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xe7, 0xd0, 0x28, 0x9d, 0x03, 0x00, 0x00,
}
